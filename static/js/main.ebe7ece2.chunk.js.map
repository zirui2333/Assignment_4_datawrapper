{"version":3,"sources":["menu.js","App.js","reportWebVitals.js","index.js"],"names":["toggleMenu","navLinks","document","querySelector","style","display","handleResize","window","innerWidth","Calendar","tooltipRef","useRef","randomRow","setRandomRow","useState","tooltip","setTooltip","visible","x","y","content","adjustedX","adjustedY","useEffect","getElementById","addEventListener","removeEventListener","weatherMemory","setWeatherMemory","Array","fill","map","handleMouseOver","e","rect","target","getBoundingClientRect","left","top","bottom","monthIndex","Math","floor","parentElement","getAttribute","dayIndex","from","children","indexOf","randomWeather","warm_notice","rating","random","weather","notice","Weather","length","includes","notices","newWeatherMemory","max","React","createElement","className","handleMouseOut","prev","daysInMonth","month","year","Date","getDate","href","id","index","key","_","onMouseOver","onMouseOut","ref","opacity","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","App"],"mappings":"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","file":"static/js/main.ebe7ece2.chunk.js","sourcesContent":["const toggleMenu = () => {\n  const navLinks = document.querySelector('.nav-links');\n\n  if (navLinks.style.display === 'flex') {\n    navLinks.style.display = 'none';\n  } else {\n    navLinks.style.display = 'flex';\n  }\n};\n\nconst handleResize = () => {\n  const navLinks = document.querySelector('.nav-links');\n  if (window.innerWidth > 1000) {\n    navLinks.style.display = '';\n  }\n};\n\nconst initializeMenu = () => {\n  document.getElementById('ham_menu').addEventListener('click', toggleMenu);\n  window.addEventListener('resize', handleResize);\n};\n\n// Export all functions\nexport { toggleMenu, handleResize, initializeMenu };\n","import React, { useState, useEffect, useRef } from 'react';\nimport \"./App.css\";\nimport { initializeMenu, handleResize, toggleMenu } from './menu';\nimport * as csv from 'csv-parser';\nimport fs from 'fs';\n\n\nconst Calendar = () => {\n  const tooltipRef = useRef(null);\n  const [randomRow, setRandomRow] = useState(null);\n  const [tooltip, setTooltip] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    content: '',\n    adjustedX: 0,\n    adjustedY: 0\n  });\n\n  useEffect(() => {\n    initializeMenu();\n\n    return () => {\n      if (document.getElementById('ham_menu')) {\n        document.getElementById('ham_menu').removeEventListener('click', toggleMenu);\n      }\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n\n\n  const [weatherMemory, setWeatherMemory] = useState(Array(12).fill(null).map(() =>\n    Array(31).fill(null)\n  ));\n  const handleMouseOver = (e) => {\n    const rect = e.target.getBoundingClientRect();\n    const tooltipWidth = 250; // Increased estimated width\n    const tooltipHeight = 70; // Increased estimated height\n    const padding = 10; // Spatial buffer zone\n\n    // Compute initial positioning\n    let x = rect.left;\n    let y = rect.top - tooltipHeight - padding;\n\n    // Boundary detection: A topological tango of spatial awareness!\n    if (x + tooltipWidth > window.innerWidth) {\n      x = window.innerWidth - tooltipWidth - padding;\n    }\n\n    // Vertical boundary check\n    if (y < 0) {\n      y = rect.bottom + padding; // Pirouette below if too close to top\n    }\n\n\n    const monthIndex = Math.floor(e.target.parentElement.parentElement.getAttribute('data-month'));\n    const dayIndex = Array.from(e.target.parentElement.children).indexOf(e.target);\n\n    let randomWeather;\n    let warm_notice = \"\";\n    let rating = Math.floor(Math.random() * (63726 - 12345 + 1)) + 12345;\n    // Check if weather already exists in memory\n    if (weatherMemory[monthIndex][dayIndex]) {\n      randomWeather = weatherMemory[monthIndex][dayIndex].weather;\n      warm_notice = weatherMemory[monthIndex][dayIndex].notice;\n      rating = weatherMemory[monthIndex][dayIndex].rating;\n    } else {\n      // Generate new weather if not in memory\n      const Weather = [\"Stormy\", \"Rainy\", \"Cloudy\", \"Windy\", \"Cool\", \"Warm\", \"Sunny\"];\n      randomWeather = Weather[Math.floor(Math.random() * Weather.length)];\n\n      if ([\"Stormy\", \"Rainy\", \"Windy\"].includes(randomWeather)) {\n        const notices = [\n          \"Why not stay at home and enjoy a cup of coffee? ☕\",\n          \"Perfect time to read a book! 📚\",\n          \"Movie weather! 🎬\",\n          \"Time for some indoor activities! 🏠\"\n        ];\n        warm_notice = notices[Math.floor(Math.random() * notices.length)];\n      } else if (randomWeather === \"Cloudy\") {\n        const notices = [\n          \"A perfect day for photography! 📸\",\n          \"Great weather for a peaceful walk! 🚶‍♂️\",\n          \"Time to watch the clouds drift by! ☁️\",\n          \"Cozy weather for a picnic outdoors! 🧺\"\n        ];\n        warm_notice = notices[Math.floor(Math.random() * notices.length)];\n      } else if (randomWeather === \"Cool\") {\n        const notices = [\n          \"Perfect weather for a light jacket! 🧥\",\n          \"Great time for outdoor exercise! 🏃‍♂️\",\n          \"Enjoy the crisp air! 🍂\",\n          \"Time for a brisk walk! 🚶‍♀️\"\n        ];\n        warm_notice = notices[Math.floor(Math.random() * notices.length)];\n      } else if (randomWeather === \"Warm\") {\n        const notices = [\n          \"Ice cream weather! 🍦\",\n          \"Perfect for a beach day! 🏖️\",\n          \"Time for outdoor dining! 🍽️\",\n          \"Great day for a picnic! 🧺\"\n        ];\n        warm_notice = notices[Math.floor(Math.random() * notices.length)];\n      } else if (randomWeather === \"Sunny\") {\n        const notices = [\n          \"Don't forget your sunscreen! 🧴\",\n          \"Perfect day for the pool! 🏊‍♂️\",\n          \"Time to wear your shades! 😎\",\n          \"Great day for outdoor activities! 🌞\"\n        ];\n        warm_notice = notices[Math.floor(Math.random() * notices.length)];\n      }\n\n      // Store in memory\n      const newWeatherMemory = [...weatherMemory];\n      newWeatherMemory[monthIndex][dayIndex] = {\n        weather: randomWeather,\n        notice: warm_notice,\n        rating: rating\n      };\n      setWeatherMemory(newWeatherMemory);\n    }\n\n\n    setTooltip({\n      visible: true,\n      x: rect.left,\n      y: rect.top - 30,\n      adjustedX: Math.max(padding, x),\n      adjustedY: y,\n      content: (\n        <div className=\"tooltip-content\">\n          <div className=\"weather-info\">\n            <span className=\"weather-label\">Weather: </span>\n            <span className=\"weather-value\">{randomWeather}</span>\n          </div>\n          <div className=\"weather-notice\">\n            <span className=\"weather-label\">Notice: </span>\n            {warm_notice}\n          </div>\n          <div className=\"weather-rating\">\n            <span className=\"weather-label\">Note: </span>\n            <span className=\"weather-value\">{rating} people like this weather</span>\n          </div>\n        </div>\n      )\n    });\n  };\n\n  const handleMouseOut = () => {\n    setTooltip(prev => ({ ...prev, visible: false }));\n  };\n\n  const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\",\n  ];\n\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  return (\n    <div className=\"calendar-container\">\n      <nav>\n        <div className=\"left\">\n          <a href=\"https://zirui2333.github.io/WDB-education/\">Home</a>\n        </div>\n        <div id=\"ham_menu\" className=\"hamburger\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n\n        <div className=\"right nav-links\">\n          <a href=\"https://zirui2333.github.io/WDB-education/calculator.html\">GPA Calculator</a>\n          <a href=\"index.html\">Music Calendar</a>\n          <a href=\"https://zirui2333.github.io/WDB-education/project.html\">Interest</a>\n          <a href=\"https://zirui2333.github.io/WDB-education/contact.html\">Contact Me</a>\n        </div>\n      </nav>\n\n      <h3>My Datawrapper Chart 2023</h3>\n      <div className=\"calendar-grid\">\n        {months.map((month, index) => (\n          <div key={index} className=\"month\">\n            <h4>{month}</h4>\n            <div className=\"days\">\n              {Array.from({ length: daysInMonth(index + 1, 2023) }).map((_, dayIndex) => (\n                <div\n                  key={dayIndex}\n                  className=\"day-block\"\n                  onMouseOver={handleMouseOver}\n                  onMouseOut={handleMouseOut}\n                ></div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n      {tooltip.visible && (\n        <div\n          ref={tooltipRef}\n          className=\"tooltip\"\n          style={{\n            left: `${tooltip.x + 5}px`, // Small offset from cursor\n            top: `${tooltip.y - 10}px`,\n            opacity: tooltip.visible ? 1 : 0\n          }}\n        >\n          {tooltip.content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Calendar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}